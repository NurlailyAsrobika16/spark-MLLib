# -*- coding: utf-8 -*-
"""Movie_Lens(Slide 30).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17YvglGf4NnoKPG__2fQTbD3iJ8tXp-Fm
"""

from google.colab import drive
drive.mount('/content/drive')

!pip install pyspark

# Import Library
from pyspark.sql import SparkSession
from pyspark.sql.functions import col
from pyspark.ml.recommendation import ALS

spark = SparkSession.builder.appName("Movie Lens").getOrCreate()

# Parse String Menjadi Objek Rating
def parseRating(str):
    fields = str.split("::")
    assert len(fields) == 4
    return (int(fields[0]), int(fields[1]), float(fields[2]), int(fields[3]))

raw = spark.read.text("/content/drive/MyDrive/Colab Notebooks/SPARK/ratings.dat").rdd.map(lambda x: x[0])
ratings = raw.map(parseRating).toDF(["userId", "movieId", "rating", "timestamp"])
ratings.show(5)

# Data Training 80% dan Test 20%
training, test = ratings.randomSplit([0.8, 0.2])

# Membuat Model
als = ALS(maxIter=5, regParam=0.01, userCol="userId", itemCol="movieId", ratingCol="rating")
model = als.fit(training)
model.save("mymodel")

# Prediksi Data
predictions = model.transform(test)
mse = predictions.withColumn("diff", col("rating") - col("prediction")).select((col("diff") ** 2).alias("squared_diff")).filter(~col("squared_diff").isNull()).agg({"squared_diff": "sum"}).collect()[0][0]
print("Mean Squared Error:", mse)

predictions.show(10)

# Menyimpan Hasil Prediksi
predictions.write.format("csv").save("ml-predictions.csv")

